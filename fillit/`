#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#define size_buf1 4096
#define size_buf2 4000
void	*ft_memchr(const void *s, int c, size_t n)
{
	unsigned char	*tmp;

	tmp = (unsigned char*)s;
	while (n > 0 && *tmp != (unsigned char)c)
	{
		n--;
		tmp++;
	}
	if (n == 0)
		return (NULL);
	else
		return (tmp);
}
size_t	ft_strlen(const char *str)
{
	size_t	len;

	len = 0;
	while (str[len] != '\0')
		len++;
	return (len);
}

int	verifierfichier()
{
//	int		ret1;
	int		ret2;
	int		fd;
	int		i;
	int		j;
	int		n;
	int		r;
//	char	buf1[size_buf1 + 1];
	char	buf2[size_buf2 + 1];
	char	usage[] = "usage: cp [-R [-H | -L | -P]] [-fi | -n] [-apvX]";

	//ret1 = 0;
	ret2 = 0;
	i = 0;
	j = 0;
	r = 0;
	n = 0;
	/*ret1 = read(0, buf1, size_buf1);
	buf1[ret1] = '\0';
	if ((ft_memchr(buf1, ' ' , ret1) != NULL) || ret1 == 0 )
	{
		write(2,usage,ft_strlen(usage));
		return (0);
	}
	else*/
	fd = open("fichier_Non_valid", O_RDONLY);
	if (fd == -1)
	{
		write(2,"ERROR1",6);
		return (0);
	}
	else
	{
		while ((ret2 = read(fd, buf2, size_buf2)))
		{
			buf2[ret2] = '\0';
			if (ret2 > 544)
			{
				write(2,"ERROR2",6);
				return (0);
			}
		}
		while (buf2[i] != '\0')
		{
			if (buf2[i] != '.' && buf2[i] != '#' && buf2[i] != '\n')
			{
				write(2, "ERROR3", 6);
				return (0);
			}
			if (buf2[i] == '.')
				{
					r++;
					if (r > 12)
					write(2, "ERROR4", 6);
				}
			if (buf2[i] == '#')
				{
					n++;
					if ( n > 4)
					write(2, "ERROR5", 6);
				}
			if (buf2[i] == '\n' && (i % 5 == 0))
				j++;
			if (buf2[i] == '#' && buf2[i + 1] != '#' &&  buf2[i - 1] != '#' && buf2[i + 1] != '\n' && buf2[i + 5] != '#')
			{
				write(2, "ERROR6", 6);
				return (0);
			}
			if (buf2[i] == '#' && buf2[i+1] == '\n' && n < 4 && j%4 != 0 && buf2[i + 2] != '#' && buf2[i + 3] != '#' && buf2[i+4] != '#' && buf2[i+5] != '#')
				{
					write(2, "ERROR7", 6);
					return (0);
				}
			if (buf2[i] == '\n' && (i % 5 != 0) && (j % 4 != 0)) 
			{
				write(2, "ERROR8", 6);
				return (0);
			}
			if (buf2[i] == '\n' && (j % 4 == 0))
			{
				n = 0;
				r = 0;
			}
			i++;
		}
		if (buf2[i] == '\0')
			write(1,"ok",2);
	}
	return (1);
}

int main()
{
	verifierfichier();
	return (0);
}
